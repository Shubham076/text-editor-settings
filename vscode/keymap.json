// Place your key bindings in this file to override the defaultsauto[]
[
    {
        "key": "numpad_decimal",
        "command": "leetcode.testSolution"
    },
    {
        "key":"ctrl+e",
        "command":"cursorLineEnd",
        
    }
    ,{
        "key":"ctrl+a",
        "command":"cursorHome",
    },
    {
        "key": "alt+g",
        "command":"extension.multiCommand.execute",
        "args":{
            "timing":0,
            "sequence":[
                "cursorTop",
                "cursorLineEnd",
            ]
        }
    },
    {
        "key": "alt+h",
        "command": "cursorBottom",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+l",
        "command": "extension.multiCommand.execute",
        "when": "textInputFocus",
        "args":{
            "timing":0,
            "sequence":[
                "expandLineSelection",
                "deleteLeft"
            ]
        }
      },
    {
        "key": "ctrl+m",
        "command":"extension.multiCommand.execute",
        "args":{
            "timing":-10,
            "sequence":[
                "expandLineSelection",
                "editor.action.smartSelect.expand",
            ]
        }
      },
      {
        "key": "ctrl+k",
        "command": "workbench.action.toggleSidebarVisibility"
      },
      {
        "key": "ctrl+b",
        "command": "workbench.action.tasks.build"
    },
    {
        "key": "ctrl+shift+alt+d",
        "command": "editor.action.deleteLines",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+up",
        "command": "editor.action.copyLinesUpAction",
        "when": "editorTextFocus"
    },

    {
        "key": "ctrl+shift+down",
        "command": "editor.action.copyLinesDownAction",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+down",
        "command": "-editor.action.copyLinesDownAction",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+up",
        "command": "-editor.action.copyLinesUpAction",
        "when": "editorTextFocus"
    },
    {
        "key": "numpad7",
        "command": "toggleSuggestionDetails",
        "when": "suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+i",
        "command": "-toggleSuggestionDetails",
        "when": "suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "numpad9",
        "command": "editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+i",
        "command": "-editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "f12",
        "command": "-editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+c",
        "command": "editor.action.clipboardCopyAction"
    },
    {
        "key": "cmd+c",
        "command": "-editor.action.clipboardCopyAction"
    },
    {
        "key": "ctrl+v",
        "command": "editor.action.clipboardPasteAction"
    },
    {
        "key": "cmd+v",
        "command": "-editor.action.clipboardPasteAction"
    },
    {
        "key": "ctrl+x",
        "command": "editor.action.clipboardCutAction"
    },
    {
        "key": "cmd+x",
        "command": "-editor.action.clipboardCutAction"
    },
    {
        "key": "ctrl+z",
        "command": "undo"
    },
    {
        "key": "cmd+z",
        "command": "-undo"
    },
    {
        "key": "ctrl+y",
        "command": "redo"
    },
    {
        "key": "shift+cmd+z",
        "command": "-redo"
    },
    {
        "key": "ctrl+s",
        "command": "workbench.action.files.save"
    },
    {
        "key": "cmd+s",
        "command": "-workbench.action.files.save"
    },
    {
        "key": "cmd+a",
        "command": "-editor.action.selectAll"
    },
    {
        "key": "ctrl+f",
        "command": "settings.action.search",
        "when": "inSettingsEditor"
    },
    {
        "key": "cmd+f",
        "command": "-settings.action.search",
        "when": "inSettingsEditor"
    },
    {
        "key": "ctrl+shift+f",
        "command": "workbench.action.findInFiles"
    },
    {
        "key": "shift+cmd+f",
        "command": "-workbench.action.findInFiles"
    },
    {
        "key": "ctrl+shift+h",
        "command": "workbench.action.replaceInFiles"
    },
    {
        "key": "shift+cmd+h",
        "command": "-workbench.action.replaceInFiles"
    },
    {
        "key": "ctrl+h",
        "command": "editor.action.startFindReplaceAction",
        "when": "editorFocus || editorIsOpen"
    },
    {
        "key": "alt+cmd+f",
        "command": "-editor.action.startFindReplaceAction",
        "when": "editorFocus || editorIsOpen"
    },
    {
        "key": "ctrl+f",
        "command": "actions.find",
        "when": "editorFocus || editorIsOpen"
    },
    {
        "key": "ctrl+shift+p",
        "command": "workbench.action.showCommands"
    },
    {
        "key": "cmd+shift+p",
        "command": "workbench.action.showCommands"
    },
    {
        "key": "ctrl+p",
        "command": "workbench.action.quickOpen"
    },
    {
        "key": "cmd+p",
        "command": "workbench.action.quickOpen"
    },
    {
        "key": "cmd+w",
        "command": "-workbench.action.closeWindow",
        "when": "!editorIsOpen && !multipleEditorGroups"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.closeWindow",
        "when": "!editorIsOpen && !multipleEditorGroups"
    },
    {
        "key": "shift+cmd+w",
        "command": "-workbench.action.closeWindow"
    },

//added new commands
 {
        "key": "cmd+[",
        "command": "workbench.action.navigateBack",
        "when": "canNavigateBack"
    },
    {
        "key": "ctrl+-",
        "command": "-workbench.action.navigateBack",
        "when": "canNavigateBack"
    },
    {
        "key": "cmd+]",
        "command": "workbench.action.navigateForward",
        "when": "canNavigateForward"
    },
    {
        "key": "ctrl+shift+-",
        "command": "-workbench.action.navigateForward",
        "when": "canNavigateForward"
    },
    {
        "key": "ctrl+i",
        "command": "editor.action.goToImplementation",
        "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "cmd+f12",
        "command": "-editor.action.goToImplementation",
        "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "shift+f12",
        "command": "-editor.action.goToReferences",
        "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "cmd+up",
        "command": "editor.action.moveLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+up",
        "command": "-editor.action.moveLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+down",
        "command": "editor.action.moveLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+down",
        "command": "-editor.action.moveLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+c",
        "command": "editor.action.clipboardCopyAction"
    },
    {
        "key": "cmd+v",
        "command": "editor.action.clipboardPasteAction"
    },
    {
        "key": "cmd+a",
        "command": "editor.action.selectAll"
    },
    {
        "key": "cmd+x",
        "command": "editor.action.clipboardCutAction"
    },
    {
        "key": "cmd+z",
        "command": "undo"
    },
    {
        "key": "cmd+y",
        "command": "redo"
    },
    {
        "key": "cmd+s",
        "command": "workbench.action.files.save"
    },
    {
        "key": "cmd+left",
        "command": "cursorWordLeft",
        "when": "textInputFocus"
    },
    {
        "key": "cmd+right",
        "command": "cursorWordRight"
    },
    {
        "key": "shift+cmd+up",
        "command": "editor.action.insertCursorAbove",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+cmd+down",
        "command": "editor.action.insertCursorBelow",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+i",
        "command": "-editor.action.insertCursorAtEndOfEachLineSelected",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+cmd+l",
        "command": "editor.action.insertCursorAtEndOfEachLineSelected"
    },
    {
        "key": "ctrl+d",
        "command": "editor.action.addSelectionToNextFindMatch",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+right",
        "command": "-editor.action.smartSelect.expand",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+`",
        "command": "editor.action.smartSelect.expand",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+cmd+right",
        "command": "-editor.action.smartSelect.expand",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+f",
        "command": "actions.find",
        "when": "editorFocus || editorIsOpen"
    },
    {
        "key": "alt+f",
        "command": "editor.action.goToReferences"
    },
    {
        "key": "shift+cmd+f",
        "command": "editor.action.referenceSearch.trigger"
    },
    {
        "key": "cmd+i",
        "command": "-inlineChat.start",
        "when": "inlineChatHasProvider && !editorReadonly"
    },
    {
        "key": "cmd+i",
        "command": "-editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
    },
    {
        "key": "cmd+i",
        "command": "-focusSuggestion",
        "when": "suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "cmd+i",
        "command": "-toggleSuggestionDetails",
        "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "cmd+i",
        "command": "editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "shift+cmd+l",
        "command": "-editor.action.selectHighlights",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+t",
        "command": "workbench.action.terminal.new",
        "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
    },
    {
        "key": "ctrl+d",
        "command": "-deleteRight",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+`",
        "command": "-workbench.action.terminal.new",
        "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
    },
    {
        "key": "ctrl+w",
        "command": "workbench.action.terminal.kill",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "cmd+w",
        "command": "workbench.action.terminal.kill",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+w",
        "command": "workbench.action.closeActiveEditor",
        "when": "editorFocus && editorIsOpen"
    },
    {
        "key": "cmd+w",
        "command": "workbench.action.closeActiveEditor",
        "when": "editorFocus && editorIsOpen"
    },
    {
        "key": "ctrl+w",
        "command": "workbench.action.closeActiveEditor",
        "when": "editorFocus && editorIsOpen"
    },
    {
        "key": "ctrl+q",
        "command": "workbench.action.closeWindow"
    },
    {
        "key": "cmd+q",
        "command": "workbench.action.closeWindow"
    },
    
    {
        "key": "cmd+d",
        "command": "workbench.action.terminal.split",
        "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
    },
    {
        "key": "ctrl+tab",
        "command": "workbench.action.terminal.focusNext",
        "when": "terminalFocus"
      },
      {
        "key": "ctrl+shift+tab",
        "command": "workbench.action.terminal.focusPrevious",
        "when": "terminalFocus"
    },
    {
        "key": "cmd+right",
        "command": "workbench.action.terminal.focusNextPane",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+cmd+down",
        "command": "-workbench.action.terminal.focusNextPane",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "cmd+left",
        "command": "workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+cmd+up",
        "command": "-workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.switchWindow"
    },
    {
        "key": "cmd+left",
        "command": "cursorLineStartSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+a",
        "command": "-cursorLineStartSelect",
        "when": "textInputFocus"
    },
    {
        "key": "cmd+right",
        "command": "cursorLineEndSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+e",
        "command": "-cursorLineEndSelect",
        "when": "textInputFocus"
    },
    {
        "key": "cmd+k right",
        "command": "workbench.action.splitEditorRight"
    },
    {
        "key": "cmd+k cmd+\\",
        "command": "-workbench.action.splitEditorRight"
    },
    {
        "key": "cmd+k down",
        "command": "workbench.action.splitEditorDown"
    },
    {
        "key": "cmd+k cmd+\\",
        "command": "-workbench.action.splitEditorDown"
    },
    {
        "key": "shift+alt+r",
        "command": "editor.action.rename",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "f2",
        "command": "-editor.action.rename",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    }
]

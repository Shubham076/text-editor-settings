[
    // Commented out chained command for super+t
    // {
    //     "keys": ["super+t"],
    //     "command": "chain",
    //     "args": {
    //         "commands": [
    //             ["move_to", {"to": "bof", "extend": false}],
    //             ["move_to", {"to": "eol", "extend": false}],
    //             ["insert", {"characters": "\n"}],
    //             // ["move", {"by": "characters", "forward": false}]
    //         ]
    //     }
    // },

    // Text selection shortcuts
    { "keys": ["ctrl+t"], "command": "move_to", "args": {"to": "bof", "extend": true} },
    { "keys": ["ctrl+b"], "command": "move_to", "args": {"to": "eof", "extend": true} },

    // UI controls
    { "keys": ["super+\\"], "command": "toggle_side_bar" },

    // Line manipulation
    { "keys": ["ctrl+shift+down"], "command": "duplicate_line" },
    { "keys": ["ctrl+shift+up"], "command": "duplicate_line", "args": {"forward": false} },
    { "keys": ["super+up"], "command": "swap_line_up" },
    { "keys": ["super+down"], "command": "swap_line_down" },
    { "keys": ["super+shift+up"], "command": "select_lines", "args": {"forward": false} },
    { "keys": ["super+shift+down"], "command": "select_lines", "args": {"forward": true} },

    // Selection expansion
    { "keys": ["super+e"], "command": "expand_selection", "args": {"to": "smart"} },
    { "keys": ["super+b"], "command": "expand_selection", "args": {"to": "brackets"} },

    // Indentation
    { "keys": ["ctrl+]"], "command": "indent" },
    { "keys": ["ctrl+["], "command": "unindent" },

    // Navigation
    { "keys": ["super+["], "command": "jump_back" },
    { "keys": ["super+]"], "command": "jump_forward" },

    // Build system
    { "keys": ["alt+c"], "command": "cancel_build" },
    { "keys": ["alt+b"], "command": "build" },

    // Find and replace
    { "keys": ["super+d"], "command": "find_under_expand" },

    // Custom line deletion with selection
    {
        "keys": ["super+backspace"],
        "command": "chain",
        "args": {
            "commands": [
                ["expand_selection", {"to": "line"}],
                ["left_delete"]
                // ["move", {"by": "characters", "forward": false}],
                // ["insert", {"characters": "\n"}]
            ]
        }
    },

    // Cursor movement
    { "keys": ["ctrl+e"], "command": "move_to", "args": {"to": "eol", "extend": false} },
    { "keys": ["ctrl+a"], "command": "move_to", "args": {"to": "bol", "extend": false} },
    { "keys": ["super+right"], "command": "move_to", "args": {"to": "eol", "extend": true} },
    { "keys": ["super+left"], "command": "move_to", "args": {"to": "bol", "extend": true} },

    // Word deletion
    { "keys": ["super+delete"], "command": "delete_word", "args": {"forward": true, "sub_words": true} },

    // Terminal and console
    { "keys": ["ctrl+`"], "command": "toggle_terminus_panel" },
    { "keys": ["super+backquote"], "command": "show_panel", "args": {"panel": "console", "toggle": true} },

    // File operations in sidebar
    { "keys": ["ctrl+n"], "command": "side_bar_new_file", "args": {"paths": []} },
    { "keys": ["super+alt+n"], "command": "side_bar_new_directory" },
    { "keys": ["alt+r"],
     "command": "side_bar_rename",
     "context": [
            {"key": "control", "operator": "equal", "operand": "sidebar_tree"}
        ]
    },
    {
        "keys": ["super+backspace"],
        "command": "side_bar_delete",
        "args": {"paths": []},
        "context": [
            {"key": "control", "operator": "equal", "operand": "sidebar_tree"}
        ]
    },

    // formatting
    { "keys": ["alt+f"], "command": "astyleformat" },
    {
        "keys": ["alt+f"],
        "command": "pretty_json",
        "context": [
            {"key": "selector", "operator": "equal", "operand": "source.json"}
        ]
    },
    {
        "keys": ["alt+f"],
        "command": "lsp_format_document",
        "context": [{"key": "lsp.session_with_capability", "operand": "documentFormattingProvider | documentRangeFormattingProvider"}]
    },


    // Standard editing shortcuts
    { "keys": ["super+x"], "command": "cut" },
    { "keys": ["super+c"], "command": "copy" },
    { "keys": ["super+v"], "command": "paste" },
    { "keys": ["super+z"], "command": "undo" },
    { "keys": ["super+y"], "command": "redo" },
    { "keys": ["super+n"], "command": "new_file" },
    { "keys": ["super+s"], "command": "save", "args": {"async": true} },
    { "keys": ["super+w"], "command": "close" },

    // Command palette and goto
    { "keys": ["super+p"], "command": "show_overlay", "args": {"overlay": "goto", "show_files": true} },
    { "keys": ["super+shift+p"], "command": "show_overlay", "args": {"overlay": "command_palette"} },

    // Find panels
    { "keys": ["super+f"], "command": "show_panel", "args": {"panel": "find", "reverse": false} },
    { "keys": ["super+r"], "command": "show_panel", "args": {"panel": "replace", "reverse": false} },
    { "keys": ["super+shift+f"], "command": "show_panel", "args": {"panel": "find_in_files"} },

    // Comments
    { "keys": ["super+forward_slash"], "command": "toggle_comment", "args": {"block": false} },

    // Go to definition - generic
    { "keys": ["super+i"], "command": "goto_definition" },

    // Go to definition - TypeScript/JavaScript
    {
        "keys": ["super+i"],
        "command": "lsp_typescript_goto_source_definition",
        "args": {
            "command_name": "_typescript.goToSourceDefinition",
            "command_args": ["$file_uri", "$position"]
        },
        "context": [
            {"key": "selector", "operator": "equal", "operand": "source.js"}
        ]
    },

    // Go to definition - Go language
    {
        "keys": ["super+i"],
        "command": "lsp_symbol_definition",
        "args": {"side_by_side": false, "force_group": true, "fallback": false, "group": -1},
        "context": [
            {"key": "lsp.session_with_capability", "operand": "definitionProvider"},
            {"key": "auto_complete_visible", "operand": false},
            {"key": "selector", "operator": "equal", "operand": "source.go"}
        ]
    },

    // Go to definition - Java
    {
        "keys": ["super+i"],
        "command": "lsp_symbol_definition",
        "args": {"side_by_side": false, "force_group": true, "fallback": false, "group": -1},
        "context": [
            {"key": "lsp.session_with_capability", "operand": "definitionProvider"},
            {"key": "auto_complete_visible", "operand": false},
            {"key": "selector", "operator": "equal", "operand": "source.java"}
        ]
    },

    // Find references and rename
    // { "keys": ["alt+f"], "command": "goto_reference" },
    {
        "keys": ["alt+f"],
        "command": "lsp_symbol_references",
        "args": {"side_by_side": false, "force_group": true, "fallback": false, "group": -1, "include_declaration": false},
        "context": [{"key": "lsp.session_with_capability", "operand": "referencesProvider"}]
    },
    {
        "keys": ["alt+r"],
        "command": "lsp_symbol_rename",
        "context": [{"key": "lsp.session_with_capability", "operand": "renameProvider"}]
    },

    // Find and replace panel shortcuts
    {
        "keys": ["alt+enter"],
        "command": "find_all",
        "args": {"close_panel": false},
        "context": [
            {"key": "panel", "operand": "replace"},
            {"key": "panel_has_focus"}
        ]
    },
    {
        "keys": ["alt+enter"],
        "command": "find_all",
        "args": {"close_panel": false},
        "context": [
            {"key": "panel", "operand": "find"},
            {"key": "panel_has_focus"}
        ]
    },
    {
        "keys": ["super+enter"],
        "command": "replace_all",
        "args": {"close_panel": false},
        "context": [
            {"key": "panel", "operand": "replace"},
            {"key": "panel_has_focus"}
        ]
    },
    {
        "keys": ["super+enter"],
        "command": "replace_all",
        "args": {"close_panel": false},
        "context": [
            {"key": "panel", "operand": "find_in_files"},
            {"key": "panel_has_focus"}
        ]
    },

    // Auto-complete for Java
    {
        "keys": ["ctrl+space"],
        "command": "lsp_complete",
        "context": [
            {"key": "selector", "operator": "equal", "operand": "source.java"}
        ]
    },

    // Additional utilities
    { "keys": ["alt+s"], "command": "reveal_in_side_bar" },

    // Git integration
    {
        "keys": ["alt+shift+d"],
        "command": "gs_diff",
        // "args": { "in_cached_mode": true },
        "context": [
            {"key": "setting.command_mode", "operator": "equal", "operand": false}
        ]
    },
    {
        "keys": ["alt+shift+i"],
        "command": "gs_inline_diff",
        "context": [
            {"key": "setting.command_mode", "operator": "equal", "operand": false}
        ]
    },
    // {
    //     "keys": ["ctrl+shift+d"],
    //     "command": "gs_inline_diff",
    //     // "args": { "in_cached_mode": true },
    //     "context": [
    //         { "key": "setting.command_mode", "operator": "equal", "operand": false },
    //     ]
    // },
    { "keys": ["alt+g"], "command": "toggle_status_view" },

    // Color scheme selector
    {
        "keys": ["super+k", "super+t"],
        "command": "show_overlay",
        "args": {
            "overlay": "command_palette",
            "text": "UI: Select Color Scheme"
        }
    },

    // Terminal integration
    {
        "keys": ["super+k"],
        "command": "terminus_keypress",
        "args": {"key": "l", "ctrl": true},
        "context": [{"key": "terminus_view"}]
    },

    // Compare view
    { "keys": ["alt+c"], "command": "toggle_compare_view" },
    {"keys": ["alt+d"],"command": "toggle_debugger_panel"},

    // { "keys": ["ctrl+n"], "command": "terminus_open", "args": {"show_in_panel": true} },
    // { "keys": ["alt+right"], "command": "toggle_terminus_panel", "args": {"cycle": true} }


    // Create new terminal (only when in terminus panel)
    { "keys": ["super+n"], "command": "terminus_open", "args": {"show_in_panel": true}, "context": [{"key": "terminus_view"}] },

    // Cycle between terminus panels (only when in terminus panel)
    // { "keys": ["alt+right"], "command": "toggle_terminus_panel", "args": {"cycle": true}, "context": [{"key": "terminus_view"}] },

    // Navigate between terminus panels (forward and backward)
    { "keys": ["ctrl+tab"], "command": "toggle_terminus_panel", "args": {"cycle": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["ctrl+shift+tab"], "command": "toggle_terminus_panel", "args": {"cycle": true, "reverse": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["super+w"], "command": "terminus_close", "context": [{"key": "terminus_view"}] }
]
